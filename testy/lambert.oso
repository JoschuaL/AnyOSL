OpenShadingLanguage 1.00
# Compiled by oslc 1.12.2dev
# options: -O2 -o /home/misha/projects/OpenShadingLanguage/testy/lambert.oso
shader test_shader
param	struct Test_struct	a			%read{1,1} %write{2147483647,-1} %struct{"Test_struct"} %structfields{rgb,alpha} %structfieldtypes{"cf"} %structnfields{2}
param	color	a.rgb	0 0 0		%read{4,4} %write{0,0} %mystruct{a} %mystructfield{0} %initexpr
param	float	a.alpha	0		%read{6,6} %write{2147483647,-1} %mystruct{a} %mystructfield{1}
param	struct Nested_Test_struct	b			%read{2147483647,-1} %write{2147483647,-1} %struct{"Nested_Test_struct"} %structfields{s,beta} %structfieldtypes{"S1f"} %structnfields{2}
param	struct Test_struct	b.s			%read{2147483647,-1} %write{1,1} %struct{"Test_struct"} %structfields{rgb,alpha} %structfieldtypes{"cf"} %structnfields{2} %mystruct{b} %mystructfield{0} %initexpr
param	color	b.s.rgb	0 0 0		%read{2147483647,-1} %write{2147483647,-1} %mystruct{b} %mystructfield{0}
param	float	b.s.alpha	0		%read{2147483647,-1} %write{2147483647,-1} %mystruct{b} %mystructfield{1}
param	float	b.beta	0		%read{6,6} %write{2147483647,-1} %mystruct{b} %mystructfield{1}
oparam	float	out	-1		%read{2147483647,-1} %write{14,14}
local	point	p	%read{3,3} %write{2,2}
local	point	p2	%read{2147483647,-1} %write{3,3}
const	int	$const1	0		%read{0,9} %write{2147483647,-1}
const	point	$const2	1 1 1		%read{2,2} %write{2147483647,-1}
temp	float	$tmp1	%read{14,14} %write{4,4}
temp	int	$tmp2	%read{13,13} %write{11,12}
temp	int	$tmp3	%read{9,9} %write{8,8}
const	string	$const3	"test_function"		%read{5,5} %write{2147483647,-1}
temp	float	$tmp4	%read{7,7} %write{6,6}
temp	float	$tmp5	%read{8,8} %write{7,7}
temp	int	$tmp6	%read{10,10} %write{9,9}
const	int	$const4	1		%read{11,11} %write{2147483647,-1}
const	int	$const5	2		%read{12,12} %write{2147483647,-1}
temp	float	$tmp7	%read{14,14} %write{13,13}
code a.rgb
# /home/misha/projects/OpenShadingLanguage/testy/big_test.osl:17
# shader test_shader(Test_struct a = Test_struct(0, 0), Nested_Test_struct b = Nested_Test_struct(a, 1), output float out = -1.0){
	assign		a.rgb $const1 	%filename{"/home/misha/projects/OpenShadingLanguage/testy/big_test.osl"} %line{17} %argrw{"wr"}
code b.s
# /home/misha/projects/OpenShadingLanguage/testy/big_test.osl:17
# shader test_shader(Test_struct a = Test_struct(0, 0), Nested_Test_struct b = Nested_Test_struct(a, 1), output float out = -1.0){
	assign		b.s a 	%filename{"/home/misha/projects/OpenShadingLanguage/testy/big_test.osl"} %line{17} %argrw{"wr"}
code ___main___
# /home/misha/projects/OpenShadingLanguage/testy/big_test.osl:18
#     point p = point(1,2,3);
	assign		p $const2 	%filename{"/home/misha/projects/OpenShadingLanguage/testy/big_test.osl"} %line{18} %argrw{"wr"}
# /home/misha/projects/OpenShadingLanguage/testy/big_test.osl:19
#     point p2 = point(p);
	assign		p2 p 	%line{19} %argrw{"wr"}
# /home/misha/projects/OpenShadingLanguage/testy/big_test.osl:20
#     out = a.rgb.r + (test_function(a, b) > 0 ? 1 : 2);
	compref		$tmp1 a.rgb $const1 	%line{20} %argrw{"wrr"}
	functioncall	$const3 9 	%argrw{"r"}
# /home/misha/projects/OpenShadingLanguage/testy/big_test.osl:12
#     return (int) -(a.alpha + b.beta);   
	add		$tmp4 a.alpha b.beta 	%line{12} %argrw{"wrr"}
	neg		$tmp5 $tmp4 	%argrw{"wr"}
	assign		$tmp3 $tmp5 	%argrw{"wr"}
# /home/misha/projects/OpenShadingLanguage/testy/big_test.osl:20
#     out = a.rgb.r + (test_function(a, b) > 0 ? 1 : 2);
	gt		$tmp6 $tmp3 $const1 	%line{20} %argrw{"wrr"}
	if		$tmp6 12 13 	%argrw{"r"}
	assign		$tmp2 $const4 	%argrw{"wr"}
	assign		$tmp2 $const5 	%argrw{"wr"}
	assign		$tmp7 $tmp2 	%argrw{"wr"}
	add		out $tmp1 $tmp7 	%argrw{"wrr"}
	end
