OpenShadingLanguage 1.00
# Compiled by oslc 1.12.2dev
# options: -O2 -o /home/misha/projects/OpenShadingLanguage/testy/lambert.oso
shader SimpleMaterial
param	color	diffuse_color	0.600000024 0.800000012 0.600000024		%read{9,18} %write{2147483647,-1}
param	float	noise_factor	0.5		%read{4,17} %write{2147483647,-1}
oparam	closure color	bsdf			%read{2147483647,-1} %write{0,20} %initexpr
global	point	P	%read{2,15} %write{2147483647,-1}
global	normal	N	%read{0,19} %write{2147483647,-1}
local	color	material_color	%read{12,20} %write{9,18}
const	string	$const1	"diffuse"		%read{0,19} %write{2147483647,-1}
temp	color	$tmp1	%read{2147483647,-1} %write{4,4}
const	float	$const2	1		%read{1,14} %write{2147483647,-1}
temp	color	$tmp2	%read{4,4} %write{1,1}
temp	color	$tmp3	%read{4,4} %write{3,3}
const	float	$const3	10		%read{2,15} %write{2147483647,-1}
temp	point	$tmp4	%read{3,3} %write{2,2}
temp	color	$tmp5	%read{9,9} %write{8,8}
temp	color	$tmp6	%read{8,8} %write{5,5}
temp	color	$tmp7	%read{8,8} %write{7,7}
temp	point	$tmp8	%read{7,7} %write{6,6}
temp	closure color	$tmp9	%read{2147483647,-1} %write{10,10}
temp	closure color	$tmp10	%read{12,12} %write{11,11}
temp	color	$tmp11	%read{18,18} %write{17,17}
temp	color	$tmp12	%read{17,17} %write{14,14}
temp	color	$tmp13	%read{17,17} %write{16,16}
temp	point	$tmp14	%read{16,16} %write{15,15}
temp	closure color	$tmp15	%read{20,20} %write{19,19}
code bsdf
# /home/misha/projects/OpenShadingLanguage/testy/lambert.osl:6
#     output closure color bsdf = diffuse(N))
	closure		bsdf $const1 N 	%filename{"/home/misha/projects/OpenShadingLanguage/testy/lambert.osl"} %line{6} %argrw{"wrr"}
code ___main___
# /home/misha/projects/OpenShadingLanguage/testy/lambert.osl:8
#    color material_color = diffuse_color * mix(1.0, noise(P * 10.0), noise_factor);
	assign		$tmp2 $const2 	%filename{"/home/misha/projects/OpenShadingLanguage/testy/lambert.osl"} %line{8} %argrw{"wr"}
	mul		$tmp4 P $const3 	%argrw{"wrr"}
	noise		$tmp3 $tmp4 	%argrw{"wr"}
	mix		$tmp1 $tmp2 $tmp3 noise_factor 	%argrw{"wrrr"}
	assign		$tmp6 $const2 	%argrw{"wr"}
	mul		$tmp8 P $const3 	%argrw{"wrr"}
	noise		$tmp7 $tmp8 	%argrw{"wr"}
	mix		$tmp5 $tmp6 $tmp7 noise_factor 	%argrw{"wrrr"}
	mul		material_color diffuse_color $tmp5 	%argrw{"wrr"}
# /home/misha/projects/OpenShadingLanguage/testy/lambert.osl:9
#    bsdf = material_color * diffuse(N);
	closure		$tmp9 $const1 N 	%line{9} %argrw{"wrr"}
	closure		$tmp10 $const1 N 	%argrw{"wrr"}
	mul		bsdf $tmp10 material_color 	%argrw{"wrr"}
# /home/misha/projects/OpenShadingLanguage/testy/lambert.osl:6
#     output closure color bsdf = diffuse(N))
	closure		bsdf $const1 N 	%line{6} %argrw{"wrr"}
# /home/misha/projects/OpenShadingLanguage/testy/lambert.osl:8
#    color material_color = diffuse_color * mix(1.0, noise(P * 10.0), noise_factor);
	assign		$tmp12 $const2 	%line{8} %argrw{"wr"}
	mul		$tmp14 P $const3 	%argrw{"wrr"}
	noise		$tmp13 $tmp14 	%argrw{"wr"}
	mix		$tmp11 $tmp12 $tmp13 noise_factor 	%argrw{"wrrr"}
	mul		material_color diffuse_color $tmp11 	%argrw{"wrr"}
# /home/misha/projects/OpenShadingLanguage/testy/lambert.osl:9
#    bsdf = material_color * diffuse(N);
	closure		$tmp15 $const1 N 	%line{9} %argrw{"wrr"}
	mul		bsdf $tmp15 material_color 	%argrw{"wrr"}
	end
